name: 'Static Build Test'
on:
  push:
    branches: [ "test" ]
  pull_request:
    branches: [ "test" ]
jobs:
  boring-ndk-armv7-small-O3:
    runs-on: windows-2022
    steps:
      - name: Set Ninja NDK
        run: |
          (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
          7z x -aoa -oC:\ninja ninja-win.zip ; rm ninja-win.zip
          (new-object System.Net.WebClient).DownloadFile('https://dl.google.com/android/repository/android-ndk-r23c-windows.zip','android-ndk.zip')
          7z x -aoa -oC:\ android-ndk.zip ; rm android-ndk.zip ; mv C:\android-ndk-r23c C:\android-ndk
      - name: Build
        run: |
          $env:Path = "C:\ninja;$env:Path"
          cd C:\
          git clone --depth=1 https://boringssl.googlesource.com/boringssl
          cd boringssl
          # cmake -DANDROID_ABI=armeabi-v7a -DANDROID_PLATFORM=android-24 -DCMAKE_TOOLCHAIN_FILE=C:/android-ndk/build/cmake/android.toolchain.cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DOPENSSL_SMALL=ON -DCMAKE_INSTALL_PREFIX=C:\boringssl_install
          # ninja ; ninja install
          cmake -DANDROID_ABI=armeabi-v7a -DANDROID_PLATFORM=android-24 -DCMAKE_TOOLCHAIN_FILE=C:/android-ndk/build/cmake/android.toolchain.cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DOPENSSL_SMALL=ON -DCMAKE_INSTALL_PREFIX=C:\boringssl_share_install -DCMAKE_C_FLAGS="-O3" -DCMAKE_CXX_FLAGS="-O3"
          ninja ; ninja install
      - name: Package Directories
        run: |
          # 7z a armv7_small_O3_boringssl_ndk_static.7z C:\boringssl_install
          7z a armv7_small_O3_boringssl_ndk_share.7z C:\boringssl_share_install
      - uses: actions/upload-artifact@v3
        with:
          name: armv7_small_O3_boringssl_ndk_share
          path: armv7_small_O3_boringssl_ndk_share.7z
      # - name: Update NDK BoringSSL Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     tag_name: NDK_BoringSSL
      #     files: |
      #       # armv7_small_boringssl_ndk_static.7z
      #       armv7_small_O3_boringssl_ndk_share.7z

  # BuildStatic:
  #   runs-on: windows-2019
  #   steps:
  #     - name: Set Mingw64
  #       run: |
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z','mingw64.7z')
  #         7z x -aoa -oC:\ mingw64.7z
  #         rm mingw64.7z
  #         (new-object System.Net.WebClient).DownloadFile('https://www.openssl.org/source/openssl-1.1.1s.tar.gz','openssl.tar.gz')
  #         7z x -aoa openssl.tar.gz
  #         7z x -aoa -oC:\ openssl.tar
  #         rm openssl.tar.gz
  #         rm openssl.tar
  #         (new-object System.Net.WebClient).DownloadFile('https://www.openssl.org/source/openssl-3.0.7.tar.gz','openssl.tar.gz')
  #         7z x -aoa openssl.tar.gz
  #         7z x -aoa -oC:\ openssl.tar
  #         rm openssl.tar.gz
  #         rm openssl.tar
  #     - uses: msys2/setup-msys2@v2
  #       with:
  #         msystem: mingw64
  #     - shell: msys2 {0}
  #       run: |
  #         pacman -S --noconfirm perl git
  #         export PATH="/c/mingw64/bin:$PATH"
  #         # cd /c/openssl-1.1.1s
  #         # ./configure mingw64 --prefix=/c/openssl1 -static
  #         # mingw32-make -j
  #         # mingw32-make install
  #         cd /c/openssl-3.0.7
  #         ./Configure mingw64 --prefix=/c/openssl3 -static
  #         mingw32-make -j
  #         mingw32-make install
  #     - name: Package Directories
  #       run: |
  #         # 7z a openssl1_mingw_static.7z C:\openssl1
  #         7z a openssl3_mingw_static.7z C:\openssl3
  #     # - uses: actions/upload-artifact@v3
  #     #   with:
  #     #     name: OpenSSL1 MinGW64 Static
  #     #     path: openssl1_mingw_static.7z
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: OpenSSL3 MinGW64 Static
  #         path: openssl3_mingw_static.7z


  # MSVCStaticBuild:
  #   runs-on: windows-2019
  #   steps:
  #     - name: Set Perl
  #       run: |
  #         (new-object System.Net.WebClient).DownloadFile('https://strawberryperl.com/download/5.32.1.1/strawberry-perl-5.32.1.1-64bit-portable.zip','perl.zip')
  #         7z x -aoa -oC:\strawberry-perl perl.zip
  #         rm perl.zip
  #         (new-object System.Net.WebClient).DownloadFile('https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/win64/nasm-2.15.05-win64.zip','nasm.zip')
  #         7z x -aoa -oC:\ nasm.zip
  #         rm nasm.zip
  #         (new-object System.Net.WebClient).DownloadFile('https://www.openssl.org/source/openssl-1.1.1s.tar.gz','openssl.tar.gz')
  #         7z x -aoa openssl.tar.gz
  #         7z x -aoa -oC:\ openssl.tar
  #         rm openssl.tar.gz
  #         rm openssl.tar
  #         (new-object System.Net.WebClient).DownloadFile('https://www.openssl.org/source/openssl-3.0.7.tar.gz','openssl.tar.gz')
  #         7z x -aoa openssl.tar.gz
  #         7z x -aoa -oC:\ openssl.tar
  #         rm openssl.tar.gz
  #         rm openssl.tar
  #     - uses: ilammy/msvc-dev-cmd@v1
  #       with:
  #         arch: amd64
  #         toolset: 14.2
  #     - name: Build script
  #       run: |
  #         $Env:PATH = "C:\nasm-2.15.05;C:\strawberry-perl\perl\bin;$Env:PATH"
  #         # cd C:\openssl-1.1.1s
  #         # perl Configure VC-WIN64A --prefix=C:\openssl1 -static
  #         # nmake -j
  #         # nmake install
  #         cd C:\openssl-3.0.7
  #         perl Configure VC-WIN64A --prefix=C:\openssl3 -static
  #         nmake -j
  #         nmake install
  #     - name: Package Directories
  #       run: |
  #         # 7z a openssl1_vc142_static.7z C:\openssl1
  #         7z a openssl3_vc142_static.7z C:\openssl3
  #     # - uses: actions/upload-artifact@v3
  #     #   with:
  #     #     name: OpenSSL1 VC142 Static
  #     #     path: openssl1_vc142_static.7z
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: OpenSSL3 vc142 Static
  #         path: openssl3_vc142_static.7z