name: 'libhv Static Build'
on:
  push:
    branches: [ "libhv" ]
  pull_request:
    branches: [ "libhv" ]
jobs:
  BuildStatic:
    runs-on: windows-2019
    steps:
      - name: Set Mingw64
        run: |
          (new-object System.Net.WebClient).DownloadFile('https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z','mingw64.7z')
          7z x -aoa -oC:\ mingw64.7z
          rm mingw64.7z
          (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
          7z x -aoa -oC:\ninja ninja-win.zip
          rm ninja-win.zip
          (new-object System.Net.WebClient).DownloadFile('https://github.com/axojhf/build_openssl/releases/download/build/openssl3_mingw_static.7z','openssl3.7z')
          7z x -aoa -oC:\ openssl3.7z
          rm openssl3.7z
          (new-object System.Net.WebClient).DownloadFile('https://github.com/nghttp2/nghttp2/releases/download/v1.51.0/nghttp2-1.51.0.tar.gz','nghttp2.tar.gz')
          7z x -aoa nghttp2.tar.gz
          7z x -aoa -oC:\ nghttp2.tar
          rm nghttp2.tar.gz
          rm nghttp2.tar
          (new-object System.Net.WebClient).DownloadFile('https://github.com/madler/zlib/releases/download/v1.2.13/zlib1213.zip','zlib.zip')
          7z x -aoa -oC:\ zlib.zip
          rm zlib.zip
          cd C:\
          git clone --depth=1 https://github.com/ithewei/libhv.git
      # - uses: msys2/setup-msys2@v2
      #   with:
      #     msystem: mingw64
      - shell: powershell
        run: |
          $env:PATH = "C:/mingw64/bin;C:\ninja;C:/openssl3/lib;C:/openssl3/include;" + $env:PATH
          cd c:\nghttp2-1.51.0
          cmake -G ninja -DCMAKE_INSTALL_PREFIX=C:/nghttp2 -DENABLE_STATIC_LIB=ON -DENABLE_SHARED_LIB=OFF -DENABLE_EXAMPLES=OFF
          cmake --build . --config Release
          cmake --install . --config Release
          cd c:\zlib-1.2.13
          cmake -G ninja -DCMAKE_INSTALL_PREFIX=C:/zlib -DZLIB_COMPAT=ON -DBUILD_SHARED_LIBS=OFF
          cmake --build . --config Release
          cmake --install . --config Release
          cd c:\libhv
          mkdir 3rd
          # 复制C:/openssl3，C:/nghttp2，C:/zlib到C:\libhv\3rd
          cp -r C:/openssl3 C:/nghttp2 C:/zlib C:/libhv/3rd
          cmake -G ninja -DCMAKE_INSTALL_PREFIX=C:/libhv -DENABLE_STATIC_LIB=ON -DENABLE_SHARED_LIB=OFF -DENABLE_EXAMPLES=OFF -DENABLE_TESTS=OFF -DENABLE_OPENSSL=ON -DENABLE_ZLIB=ON -DENABLE_NGHTTP2=ON
          cmake --build . --config Release
          cmake --install . --config Release
      - name: Package Directories
        run: |
          #使用7z将C:\libhv\install目录打包为libhv.7z
          7z a libhv.7z C:\libhv\install
      - uses: actions/upload-artifact@v3
        with:
          name: Libhv MinGW64
          path: libhv.7z
      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: OpenSSL3 MinGW64 Static
      #     path: openssl3_mingw_static.7z


  # MSVCStaticBuild:
  #   runs-on: windows-2019
  #   steps:
  #     - name: Set Perl
  #       run: |
  #         (new-object System.Net.WebClient).DownloadFile('https://strawberryperl.com/download/5.32.1.1/strawberry-perl-5.32.1.1-64bit-portable.zip','perl.zip')
  #         7z x -aoa -oC:\strawberry-perl perl.zip
  #         rm perl.zip
  #         (new-object System.Net.WebClient).DownloadFile('https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/win64/nasm-2.15.05-win64.zip','nasm.zip')
  #         7z x -aoa -oC:\ nasm.zip
  #         rm nasm.zip
  #         (new-object System.Net.WebClient).DownloadFile('https://www.openssl.org/source/openssl-1.1.1s.tar.gz','openssl.tar.gz')
  #         7z x -aoa openssl.tar.gz
  #         7z x -aoa -oC:\ openssl.tar
  #         rm openssl.tar.gz
  #         rm openssl.tar
  #         (new-object System.Net.WebClient).DownloadFile('https://www.openssl.org/source/openssl-3.0.7.tar.gz','openssl.tar.gz')
  #         7z x -aoa openssl.tar.gz
  #         7z x -aoa -oC:\ openssl.tar
  #         rm openssl.tar.gz
  #         rm openssl.tar
  #     - uses: ilammy/msvc-dev-cmd@v1
  #       with:
  #         arch: amd64
  #         toolset: 14.2
  #     - name: Build script
  #       run: |
  #         $Env:PATH = "C:\nasm-2.15.05;C:\strawberry-perl\perl\bin;$Env:PATH"
  #         cd C:\openssl-1.1.1s
  #         perl Configure VC-WIN64A --prefix=C:\openssl1 -static
  #         nmake -j
  #         nmake install_sw
  #         cd C:\openssl-3.0.7
  #         perl Configure VC-WIN64A --prefix=C:\openssl3 -static
  #         nmake -j
  #         nmake install_sw
  #     - name: Package Directories
  #       run: |
  #         7z a openssl1_vc142_static.7z C:\openssl1
  #         7z a openssl3_vc142_static.7z C:\openssl3
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: OpenSSL1 VC142 Static
  #         path: openssl1_vc142_static.7z
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: OpenSSL3 vc142 Static
  #         path: openssl3_vc142_static.7z